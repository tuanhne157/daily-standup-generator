// routes/standup.route.js
// routes/standup.route.js
const express = require('express');
const router = express.Router();
const { getCommitsLast24h } = require('../services/git.service');
const { getAssignedIssues } = require('../services/github.service');
const { generateMarkdown } = require('../utils/markdownGenerator');
const Report = require('../models/report.model');
const dayjs = require('dayjs');

// Trang preview + lá»‹ch sá»­
router.get('/', async (req, res) => {
Â  const today = dayjs().format('YYYY-MM-DD');
Â  const todayReport = await Report.findOne({ date: today });
Â  const history = await Report.find().sort({ date: -1 });

Â  let commits = [];
Â  let issues = [];

Â  if (todayReport) {
Â  Â  commits = todayReport.commits;
Â  Â  issues = todayReport.issues;
Â  } else {
Â  Â  commits = await getCommitsLast24h();
Â  Â  issues = await getAssignedIssues();
Â  }

Â  res.render('preview', {
Â  Â  commits,
Â  Â  issues,
Â  Â  history,
Â  Â  success: req.query.success
Â  });
});

// API táº¡o bÃ¡o cÃ¡o
router.post('/generate', async (req, res) => {
  console.log('ðŸŸ¡ Form body:', req.body); // ðŸ‘ˆ check giÃ¡ trá»‹

  const commits = await getCommitsLast24h();
  const issues = await getAssignedIssues();
  const blockers = req.body.blocker ? [req.body.blocker] : [];

  await generateMarkdown({ commits, issues, blockers });
  res.redirect('/?success=1');
});




router.post('/reset', async (req, res) => {
Â  await Report.deleteMany({});
Â  res.redirect('/');
});

module.exports = router;
